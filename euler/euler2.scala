/*
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    find the sum of the even-valued terms.
*/

object Two
{
    def fib( n : Int ) : Int =
    {
        if (n < 3)
        {
            return n;
        }
        else
        {
            return fib(n - 2) + fib(n - 1);
        }
    }

    def sum_even_terms_up_to( maximumValue : Int) : Int =
    {
        var n = 1;

        var sum = 0;

        var limitNotFound = 1;

        while (limitNotFound == 1)
        {
            var fibN = fib(n);
            println ("fibN is " + fibN);

            if (fibN > maximumValue)
            {
                limitNotFound = 0;
                println("limit reached");
            }
            else
            {
                if (fibN % 2 == 0)
                {
                    sum = sum + fibN;
                    println("Found " + fibN);
                }
                else
                {
                }
            }

            n = n + 1;
        }

        return sum;
    }


    def main(args: Array[String]) 
    {
        var maximumValue = 4000000;
        var sum = sum_even_terms_up_to(maximumValue);
        println("Sum is " + sum);
    }
}